package BulerBridgeCup;
/**
  * 动态规划重点突出练习
  * 数字三角形(POJ1163)
  *         7
  *        3 8
  *       8 1 0
  *      2 7 4 4
  *     4 5 2 6 5
    *     在上面的数字三角形中寻找一条从顶部到底边的路径，使得路径上所经过的数字之和最大。
    *     路径上的每一步都只能往左下或 右下走。只需要求出这个最大和即可，不必给出具体路径。 
    *     三角形的行数大于1小于等于100，数字为 0 - 99
    *         输入格式：

    5      //表示三角形的行数    接下来输入三角形
    7
    38
    810
    2744
    45265

    要求输出最大和
 * @author mlp52
 *
 */
public class day06_03 {

}
